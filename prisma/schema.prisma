generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["jsonProtocol"]
}

datasource db {
  provider          = "postgresql"
  url               = env("POSTGRES_PRISMA_URL") // uses connection pooling
  directUrl         = env("POSTGRES_URL_NON_POOLING") // uses a direct connection
  shadowDatabaseUrl = env("POSTGRES_URL_NON_POOLING") // used for migrations
}

model User {
  id        String        @id @default(cuid())
  name      String
  username  String        @unique
  image     String
  following UserFollows[] @relation("following")
  followers UserFollows[] @relation("follower")
  infos     UserInfos?
  createdAt DateTime      @default(now()) @map("created_at")
  updatedAt DateTime      @updatedAt @map("updated_at")

  @@map("users")
}

model UserFollows {
  follower    User   @relation("follower", fields: [followerId], references: [id])
  followerId  String
  following   User   @relation("following", fields: [followingId], references: [id])
  followingId String

  @@id([followerId, followingId])
  @@map("user_follows")
}

model UserInfos {
  id       String  @id @default(cuid())
  job      String?
  bio      String?
  location String?
  website  String?
  twitter  String?
  github   String?
  theme    String
  user     User    @relation(fields: [userId], references: [id])
  userId   String  @unique @map("user_id")

  @@map("user_infos")
}

model Music {
  id     String @id @default(cuid())
  name   String
  artist String
  image  String

  @@map("musics")
}

model UserMusic {
  userId  String @map("user_id")
  musicId String @map("music_id")

  @@id([userId, musicId])
  @@map("users_musics")
}
